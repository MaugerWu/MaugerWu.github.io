{"meta":{"title":"Mauger`s Blog","subtitle":"越努力，越幸运！","description":null,"author":"Mauger","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"","slug":"markdown-syntax-and-editor-introduction","date":"2017-12-26T11:04:14.574Z","updated":"2017-12-27T03:36:15.225Z","comments":true,"path":"2017/12/26/markdown-syntax-and-editor-introduction/","link":"","permalink":"http://yoursite.com/2017/12/26/markdown-syntax-and-editor-introduction/","excerpt":"","text":"###一、Markdown 简介 &emsp;&emsp;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档。特点：轻量、简单、通用、易读易写。 ###二、Markdown 基础语法 ####1. 标题 &emsp;&emsp;标题能显示出文章的结构。行首插入1-6个#，每增加一个#表示更深入层次的内容，对应到标题的深度由 1-6 阶。或者在标题底下加上==或多个成为一级标题，在标题底下加上---或多个成为二级标题。例如： 一级标题（# 一级标题）二级标题（## 二级标题）三级标题（### 三级标题）四级标题（#### 四级标题）五级标题（##### 五级标题）六级标题（###### 六级标题） ####2. 文本 字体倾斜 前后各加 *倾斜*或_倾斜_，例如：倾斜 字体加粗 前后各加 **加粗**或__加粗__，例如：加粗 字体加粗倾斜 前后各加 ***加粗倾斜***或___加粗倾斜___，例如：加粗倾斜 删除线 前后各加 ~~，例如：删除线 字体高亮 前后各加 ==，例如：==高亮==不明白为啥在简书里不能高亮显示，但其他地方可行，语法是对的。 ####3. 段落 段落：段落之间空出一行即可。 有序列表：1.后空一格即可，例如： 这里是有序列表 这里是有序列表哦 无序列表：使用*/-/+后空一格即可。例如： 换行符：一行结束后==空两格加回车==或直接回车Enter即可。例如：这里是换行。 首行缩进：&amp;emsp、&amp;ensp、&amp;nbsp abcdefghijklmnopqrstuvwxyz（这里没有缩进）&emsp;abcdefghijklmnopqrstuvwxyz&amp;emsp&ensp;abcdefghijklmnopqrstuvwxyz&amp;ensp&nbsp;abcdefghijklmnopqrstuvwxyz&amp;nbsp ABCDEFGHIJKLMNOPQRSTUVWXYZ（这里没有缩进）&emsp;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;emsp&ensp;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;ensp&nbsp;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;nbsp 首行缩进（这里没有缩进）&emsp;首行缩进&amp;emsp&ensp;首行缩进&amp;ensp&nbsp;首行缩进&amp;nbsp 内嵌行内代码：` alert(‘Hello World!’);`，例如： alert(&#39;Hello World!&#39;); 内嵌指定语言代码块：``` Java/JavaScript/Python/C/C++… 换一行写代码，完成后以```结束。例如：Python 123456789101112from math import sqrt def isprime(n): k = int(sqrt(n)) for i in range(2, k+1): if n % i == 0: return 0 return 1 if __name__ == '__main__': for n in range(101, 201): if isprime(n) == 1: print(n, end = ' ') ####4. 链接 行内式链接，[链接文本](链接地址)，例如：百度一下 &lt;url&gt;：https://www.baidu.com 图片链接：! [链接文本](链接地址)，例如： ####5. 引用 一级引用：添加 &gt; 二级引用：添加 &gt;&gt; 三级引用：添加 &gt;&gt;&gt;，依此类推，例如： 这里是一级引用，敲两下回车键 Enter，空出一行表示引用结束。 这里是二级引用 这里是三级引用 这里是四级引用 ####6. 表格 标题：|序号|班级|姓名|学号| 水平居左：|:---|或|---| 水平居中：|:---:| 水平居右：|---:| 表格内容：|1|04|Mauger|66668888|，例如： 序号 班级 姓名 学号 1 04 Mauger 66668888 ####7. 分割线 新启一行，输入---或___或***或* * *即可，例如： ###三、Markdown 常用编辑器 ####1. Markdown 在线编辑器 马克飞象 ： 一款专为印象笔记（Evernote）打造的 Markdown 编辑器。 作业部落：博客平台，支持全平台且提供 Web 版。 小书匠：提供免费/收费版本，功能强大，支持全平台且提供 Web 版。 MaHua： 界面有些简陋，Windows 10下自带输入法无法输入中文。 Dillinger ：漂亮强大，国外的，可能不稳定。 简书： 博客平台，暂不支持文本高亮显示。 ####2. 支持多平台 Sublime Text：提供免/收费版本，支持 Mac、Windows。界面简约大方，定位专业。 Farbox：博客平台，于2016年“终结”，仍运行但不再更新。将被 Bitcon 替代。 MarkEditor：提供免费/收费版本，支持 Mac 和 Windows。 Atom：出自 Github，功能十分强大，支持多种编程语言，全平台，程序员专用。 ####3. Windows 平台 MarkdownPad：提供免费/收费版本，好用。 Smark：开源，简洁，支持 Windows 和 Linux 平台。 MdCharm：开源，简约，功能完备，支持 Windows 和 Linux 平台。 ####4. OS X 平台 Mou：开发者的 Markdown 编辑器，支持 OS X 10.7~10.11，计划将支持 Sierra。 Typora：同时支持 Windows 和 Linux 平台。 MacDown：开源，免费。 ####四、参考文章 月光博客","categories":[],"tags":[]},{"title":"","slug":"git-command-to-submit-code-in-linux","date":"2017-12-26T11:04:14.572Z","updated":"2017-12-27T03:35:48.254Z","comments":true,"path":"2017/12/26/git-command-to-submit-code-in-linux/","link":"","permalink":"http://yoursite.com/2017/12/26/git-command-to-submit-code-in-linux/","excerpt":"","text":"####一、Linux 下 Git 提交代码的五个步骤 查看代码的修改状态 查看代码的修改内容 暂存需要提交的代码 提交已经暂存的文件 将代码同步到服务器 ####二、Linux 下 Git 常用操作命令Step1. 查看代码修改状态 git status 红色或绿色部分字体是工程内的发生修改的状态标识: modified 代表文件和上一版本相比，有过修改 new file 代表文件是新增加的 deleted 代表文件被删除了，提交成功后，文件将从repository中删除 untracked file 一般都是新增加的文件夹 Step2. 查看代码的修改内容 这里是查看 .gitignore 文件的变化 git diff &lt;filename&gt; 这里是查看历史修改，hashcode可以从Github上的commit记录上获取 git diff &lt;hashcode&gt; &lt;hashcode&gt; &lt;filename&gt; Step3. 暂存需要提交的代码 增加一个需要上传的文件 git add &lt;filename&gt; 增加所有需要上传的文件 git add --all 删除一个不需要上传的文件 git rm &lt;filename&gt; Step4. 提交已暂存的文件（仅仅是将修改提交到本地仓库） 提交已暂存的文件 git commit 若发现漏提文件或注释有误，使用 amend 修正 git commit --amend 提交已暂存的文件，同时进行注释 git commit -m &lt;comment&gt; Step5. 推送/同步到远端服务器 git push -u origin master","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-12-24T13:46:17.992Z","updated":"2017-12-18T15:27:24.314Z","comments":true,"path":"2017/12/24/hello-world/","link":"","permalink":"http://yoursite.com/2017/12/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}